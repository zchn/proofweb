# 1 "lexer.mll"
 
  let depth = ref 0;; 
  open Lexing;;
  type t = Eof | Dot | Semi | Word of string | Place of string
  let line = Hashtbl.create 5;;
  let file = ref "";;
  let incrl () =
    Hashtbl.replace line !file (try Hashtbl.find line !file + 1 with _ -> 1)
  ;;

# 13 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\243\255\244\255\087\000\119\000\247\255\202\000\210\000\
    \252\255\253\255\254\255\003\000\041\001\249\255\054\000\251\255\
    \091\000\094\000\255\255\009\001\005\000\095\000\002\000";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\010\000\009\000\255\255\005\000\004\000\
    \255\255\255\255\255\255\000\000\007\000\255\255\255\255\255\255\
    \004\000\004\000\255\255\255\255\001\000\004\000\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \000\000\000\000\000\000\255\255\255\255\000\000\015\000\000\000\
    \255\255\255\255\000\000\015\000\255\255\255\255\022\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\011\000\010\000\000\000\011\000\011\000\020\000\000\000\
    \011\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \011\000\000\000\005\000\011\000\018\000\020\000\000\000\004\000\
    \007\000\006\000\003\000\003\000\003\000\003\000\009\000\003\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\003\000\008\000\003\000\003\000\003\000\003\000\
    \018\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\003\000\003\000\003\000\016\000\004\000\
    \017\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\009\000\003\000\010\000\
    \018\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\000\000\003\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\000\000\003\000\003\000\003\000\000\000\000\000\000\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\003\000\003\000\003\000\003\000\004\000\000\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \000\000\003\000\003\000\003\000\012\000\003\000\003\000\003\000\
    \002\000\003\000\255\255\000\000\003\000\000\000\003\000\003\000\
    \003\000\003\000\000\000\000\000\003\000\000\000\003\000\003\000\
    \003\000\003\000\020\000\009\000\000\000\000\000\020\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\003\000\003\000\
    \000\000\020\000\000\000\000\000\000\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\021\000\000\000\000\000\008\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\003\000\003\000\
    \003\000\000\000\013\000\000\000\000\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
    \003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\000\000\003\000\003\000\003\000\
    \003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\003\000\003\000\003\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\003\000\003\000\003\000\003\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\008\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\011\000\000\000\020\000\255\255\
    \011\000\255\255\020\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\011\000\022\000\020\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\
    \014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\016\000\003\000\017\000\
    \021\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\003\000\255\255\003\000\003\000\003\000\003\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\004\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\255\255\003\000\003\000\003\000\255\255\255\255\255\255\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\003\000\003\000\003\000\003\000\004\000\255\255\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \255\255\006\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \000\000\007\000\022\000\255\255\006\000\255\255\006\000\006\000\
    \006\000\006\000\255\255\255\255\007\000\255\255\007\000\007\000\
    \007\000\007\000\019\000\019\000\255\255\255\255\019\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\006\000\006\000\006\000\
    \255\255\019\000\255\255\255\255\255\255\007\000\007\000\007\000\
    \255\255\255\255\255\255\019\000\255\255\255\255\014\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\006\000\006\000\006\000\
    \006\000\255\255\012\000\255\255\255\255\007\000\007\000\007\000\
    \007\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\
    \012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\012\000\255\255\012\000\012\000\012\000\
    \012\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\012\000\012\000\012\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\012\000\012\000\012\000\012\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\019\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec lex lexbuf =
    __ocaml_lex_lex_rec lexbuf 0
and __ocaml_lex_lex_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 20 "lexer.mll"
                  (lex lexbuf)
# 190 "lexer.ml"

  | 1 ->
# 21 "lexer.mll"
                  (incrl (); lex lexbuf)
# 195 "lexer.ml"

  | 2 ->
# 22 "lexer.mll"
                  (Dot)
# 200 "lexer.ml"

  | 3 ->
# 23 "lexer.mll"
                  (Semi)
# 205 "lexer.ml"

  | 4 ->
# 24 "lexer.mll"
                  (Word "(")
# 210 "lexer.ml"

  | 5 ->
# 25 "lexer.mll"
                  (Word ")")
# 215 "lexer.ml"

  | 6 ->
# 26 "lexer.mll"
                  (place "" lexbuf)
# 220 "lexer.ml"

  | 7 ->
# 27 "lexer.mll"
                  (incr depth; comment lexbuf)
# 225 "lexer.ml"

  | 8 ->
# 28 "lexer.mll"
                  (string lexbuf)
# 230 "lexer.ml"

  | 9 ->

  let id = Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 30 "lexer.mll"
                  (Word id)
# 237 "lexer.ml"

  | 10 ->

  let id = Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 31 "lexer.mll"
                  (Word id)
# 244 "lexer.ml"

  | 11 ->
# 32 "lexer.mll"
                  (Eof)
# 249 "lexer.ml"

  | 12 ->
# 33 "lexer.mll"
                  (failwith ("Unable to lex: [" ^ (lexeme lexbuf) ^ "]"))
# 254 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_lex_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 14
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 36 "lexer.mll"
                 (incrl (); comment lexbuf)
# 265 "lexer.ml"

  | 1 ->
# 37 "lexer.mll"
                 (decr depth; if !depth = 0 then lex lexbuf else comment lexbuf)
# 270 "lexer.ml"

  | 2 ->
# 38 "lexer.mll"
                 (incr depth; comment lexbuf)
# 275 "lexer.ml"

  | 3 ->
# 39 "lexer.mll"
                 (raise End_of_file)
# 280 "lexer.ml"

  | 4 ->
# 40 "lexer.mll"
                 (comment lexbuf)
# 285 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

and place s lexbuf =
    __ocaml_lex_place_rec s lexbuf 19
and __ocaml_lex_place_rec s lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 43 "lexer.mll"
                 (Place s)
# 296 "lexer.ml"

  | 1 ->
# 44 "lexer.mll"
                 (place s lexbuf)
# 301 "lexer.ml"

  | 2 ->
# 45 "lexer.mll"
                 (incrl (); place s lexbuf)
# 306 "lexer.ml"

  | 3 ->
# 46 "lexer.mll"
                 (raise End_of_file)
# 311 "lexer.ml"

  | 4 ->
# 47 "lexer.mll"
                 (place (s ^ (lexeme lexbuf)) lexbuf)
# 316 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_place_rec s lexbuf __ocaml_lex_state

and string lexbuf =
    __ocaml_lex_string_rec lexbuf 22
and __ocaml_lex_string_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 50 "lexer.mll"
                 (Word ("\"" ^ (lexeme lexbuf)))
# 327 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_string_rec lexbuf __ocaml_lex_state

;;

# 52 "lexer.mll"
 

# 336 "lexer.ml"
